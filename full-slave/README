Steps to deploy in Grape:

1. Change directory permissions of /pgdata : sudo chmod -R 700 /pgdata
2. Change directory owner of /pgdata : sudo chown postgres:postgres /pgdata
3. Init /pgdata : sudo -u postgres /usr/lib/postgresql/9.3/bin/initdb -D /pgdata -E 'UTF-8' --lc-collate='C' --lc-ctype='en_US.UTF-8'

4. Perform a backup-fetch via wal-e: sudo -u postgres envdir /etc/wal-e.d/env /opt/wal-e/bin/wal-e backup-fetch /pgdata LATEST
  4.1 WARNING - backup-fetch must be done when server is shut down
  4.2 Sometimes PG may not start after backup fetch. and gives a checkpoint error.
    ###DEPRECATED### 4.2.1 After backup-fetch is complete, delete backup_label from /pgdata/backup_label
    ###DEPRECATED###4.2.2 Then we need to resetlog to solve the invalid checkpoint problem: sudo -u postgres /usr/lib/postgresql/9.3/bin/pg_resetxlog -f /pgdata
    4.2.3 copy /etc/postgresql/9.3/recovery.conf to /pgdata/recovery.conf
    4.2.4 Start pg: sudo supervisorctl start pg

5. Start Postgresql server: sudo supervisorctl pg restart
6. Now go to production directory of web-app : cd /opt/deployer/production_web
7. Pull master from git: git pull origin master
8. Perform a migration: RAILS_ENV=production bundle exec rake db:migrate (Optional: Depends on what changes came via git pull)
9. Perform an assets Precompilation: RAILS_ENV=production bundle exec rake assets:precompile (Optional: Depends on what changes came via git pull)
10.Restart server: sudo supervisorctl restart production

We tried to perform wal-fetch during this operation but that resulted in wal-fetch to run and stop which is followed by failure in starting of server.
Also, since this is a slave/backup server... archival wal-push should be switched off: can be done from /etc/postgresql/9.3/main/postgresql.conf.



